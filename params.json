{
  "name": "Distributed GPU Ray Tracing",
  "tagline": "Ye Yuan, Ken Ling",
  "body": "# Check Point \r\nhttps://github.com/Khrylx/DSGPURayTracing/wiki\r\n\r\n# Summary\r\nWe aim to develop a fast Distributed GPU ray tracer that has the following features:  \r\n\r\n1. **Very Fast Ray Traversal**   \r\nEven for scene with 100K+ triangles, our ray tracer can achieve a throughput of 200+ Mrays/s on GTX 680 for primary ray.\r\nAnd we can render a 1000x1000 picture of the scene with ambient occlusion at 60 FPS, while its CPU counterpart stays with 0.30 FPS.  \r\n\r\n2. **Very Fast Parallel BVH build**  \r\nWe can build BVH of scenes with 240K+ triangles in 8 ms, while the CPU build takes nearly 2 second.\r\n\r\n3. **Distributed Ray Tracing across Clusters** \r\nWe implemented a server client mechanism for the system, which allows us to render large scenes with multiple machines and GPUs.\r\n\r\n4. **Versatile**  \r\nOur ray tracer support almost all the functionalities of its CPU counterpart:  \r\n  * Monte Carlo sampling  \r\n  * Multiple types of BSDFs: refraction, Fresnel reflection, e.g.\r\n\r\n# Results\r\n\r\n\r\n ",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}